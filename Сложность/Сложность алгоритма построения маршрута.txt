Сложность алгоритма сортировки карточек (метод TravelPath.Combine())
оценивается сложностью входящих в него алгоритмов поиска первого элемента 
и поиска остальных элементов.
Сложность алгоритма поиска первого элемента оценивается сложностью 
алгоритма перебора всех карточек 
и сложностью алгоритма проверки, является ли каждая карточка первой
Проверка, является ли карточка первой - это перебор до n-1 карточек, следовательно, сложность IsFirstCardInPath ~ O(n-1)
Описанная выше проверка применяется для всех карточек, следовательно, общая сложность алгоритма поиска первой карточки ~ O(n(n-1))
Поиск остальных элементов состоит из последоваельного перебора всех оставшихся в списке карточек с удалением найденной карточки из списка
Максимальное количество вариантов поиска, с учётом того, что первый элемент уже выбран, оценивается рядом (сумма по i от 1 до n-1)(n-i)),
т.е. убывающей арифметической прогрессией. 
Итого сложность метода Combine ~ O(n(n-1) + (сумма по i от 1 до n-1)(n-i)) = 
= (по формуле суммы арифметической прогрессии)= O(n(n-1) + (1+ n-1)(n-1)/2) = O(1.5*n(n-1)) 
= O(1.5*n^2 - 1.5n) ~ O(1.5n^2).
Также кратко сложность указана в комментариях в коде.

